name: CI/CD pipline

on:
  push:
    branches: [ "develop"  ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  test: 
    runs-on: ubuntu-latest
    steps: 
      - name: Running tests
        run: echo "------------Running unit tests...------------"
      - name: Test Results   
        run: echo "------------The tests have been successfully passed! ------------"

  build:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3
      - name: Start build the Docker image
        run: echo "------------Start building the docker image...------------"
      - name: Build the Docker image
        run: docker build -t vvzlssk32/course-image-repo:latest python/. && docker image prune -f
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push the Docker image to the DockerHub
        run: docker push vvzlssk32/course-image-repo:latest
      - name: End build the Docker image
        run: echo "------------Docker image created successfully!------------"
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Start deploy the Docker image
        run: echo "------------Start deploying the docker image...------------"
      - name: Preparation and cleanup for deploy
        run:  docker rm -f $(docker ps -a -q) || echo "No containers available for cleaning"
      - name: Deploy the Docker image
        run: docker run -d -p 127.0.0.2:80:80 --name course_container vvzlssk32/course-image-repo:latest  
      - name: End deploy the Docker image
        run: echo "New container added at http://127.0.0.2:80"
